#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef AIRSHIPPREFERENCECENTER_SWIFT_H
#define AIRSHIPPREFERENCECENTER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AirshipBasement;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AirshipPreferenceCenter",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol UAPreferenceCenterOpenDelegate;
@class NSString;
@class UAPreferenceCenterConfig;
@class NSData;
@class NSURL;

/// Airship PreferenceCenter module.
SWIFT_CLASS_NAMED("PreferenceCenter")
@interface UAPreferenceCenter : NSObject <UAComponent>
/// The shared PreferenceCenter instance. <code>Airship.takeOff</code> must be called before accessing this instance.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UAPreferenceCenter * _Nonnull shared;)
+ (UAPreferenceCenter * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Open delegate.
/// If set, the delegate will be called instead of launching the OOTB preference center screen.
@property (nonatomic, weak) id <UAPreferenceCenterOpenDelegate> _Nullable openDelegate;
- (BOOL)setThemeFromPlist:(NSString * _Nonnull)plist error:(NSError * _Nullable * _Nullable)error;
@property (nonatomic, getter=isComponentEnabled) BOOL componentEnabled;
/// Opens the Preference Center with the given ID.
/// \param preferenceCenterID The preference center ID.
///
- (void)openPreferenceCenter:(NSString * _Nonnull)preferenceCenterID;
/// Returns the configuration of the Preference Center with the given ID.
/// \param preferenceCenterID The preference center ID.
///
- (void)configWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID completionHandler:(void (^ _Nonnull)(UAPreferenceCenterConfig * _Nullable, NSError * _Nullable))completionHandler;
/// Returns the configuration of the Preference Center as JSON data with the given ID.
/// \param preferenceCenterID The preference center ID.
///
- (void)jsonConfigWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completionHandler;
- (BOOL)deepLink:(NSURL * _Nonnull)deepLink SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol UAPreferenceCenterConfigSection;
@class UAPreferenceConfigCommonDisplay;
@class UAPreferenceCenterConfigOptions;

/// Preference center config.
SWIFT_CLASS_NAMED("PreferenceCenterConfig")
@interface UAPreferenceCenterConfig : NSObject
/// The config’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceCenterConfigSection>> * _Nonnull sections;
/// The config’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
/// The config’s options.
@property (nonatomic, readonly, strong) UAPreferenceCenterConfigOptions * _Nullable options;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Config options.
SWIFT_CLASS_NAMED("Options")
@interface UAPreferenceCenterConfigOptions : NSObject
/// The config identifier.
@property (nonatomic, readonly) BOOL mergeChannelDataToContact;
- (nonnull instancetype)initWithMergeChannelDataToContact:(BOOL)mergeChannelDataToContact OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Common display info
SWIFT_CLASS_NAMED("CommonDisplay")
@interface UAPreferenceConfigCommonDisplay : NSObject
/// Title
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable subtitle;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UAPreferenceCenterConfigConditionType : NSInteger;

/// Condition
SWIFT_PROTOCOL_NAMED("PreferenceConfigCondition")
@protocol UAPreferenceConfigCondition
/// Condition type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigConditionType type;
@end

enum UANotificationOptInConditionStatus : NSInteger;

SWIFT_CLASS_NAMED("NotificationOptInCondition")
@interface UAPreferenceCenterConfigNotificationOptInCondition : NSObject <UAPreferenceConfigCondition>
@property (nonatomic, readonly) enum UAPreferenceCenterConfigConditionType type;
@property (nonatomic, readonly) enum UANotificationOptInConditionStatus optInStatus;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, UANotificationOptInConditionStatus, "OptInStatus", open) {
  UANotificationOptInConditionStatusOptedIn = 0,
  UANotificationOptInConditionStatusOptedOut = 1,
};

enum UAPreferenceCenterConfigSectionType : NSInteger;

/// Preference config section.
SWIFT_PROTOCOL_NAMED("PreferenceCenterConfigSection")
@protocol UAPreferenceCenterConfigSection
/// The section’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigSectionType type;
/// The section’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@end

@protocol UAPreferenceCenterConfigItem;

/// Common section.
SWIFT_CLASS_NAMED("CommonSection")
@interface UAPreferenceCenterConfigCommonSection : NSObject <UAPreferenceCenterConfigSection>
/// The section’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigSectionType type;
/// The section’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceCenterConfigItem>> * _Nonnull items;
/// The section’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Labeled section break info.
SWIFT_CLASS_NAMED("LabeledSectionBreak")
@interface UAPreferenceLabeledSectionBreak : NSObject <UAPreferenceCenterConfigSection>
/// The section’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigSectionType type;
/// The section’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The section’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UAPreferenceCenterConfigItemType : NSInteger;

/// Preference section item info.
SWIFT_PROTOCOL_NAMED("PreferenceCenterConfigItem")
@protocol UAPreferenceCenterConfigItem
/// The type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@end


/// Channel subscription item info.
SWIFT_CLASS_NAMED("ChannelSubscription")
@interface UAPreferenceCenterConfigChannelSubscription : NSObject <UAPreferenceCenterConfigItem>
/// The item’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s subscription ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull subscriptionID;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UAPreferenceContactSubscriptionGroupComponent;

/// Group contact subscription item info.
SWIFT_CLASS_NAMED("ContactSubscriptionGroup")
@interface UAPreferenceCenterConfigContactSubscriptionGroup : NSObject <UAPreferenceCenterConfigItem>
/// The item’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s subscription ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull subscriptionID;
/// Components
@property (nonatomic, readonly, copy) NSArray<UAPreferenceContactSubscriptionGroupComponent *> * _Nonnull components;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UAChannelScopes;

/// Contact subscription group component.
SWIFT_CLASS_NAMED("Component")
@interface UAPreferenceContactSubscriptionGroupComponent : NSObject
@property (nonatomic, readonly, strong) UAChannelScopes * _Nonnull scopes;
/// The component’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Contact subscription item info.
SWIFT_CLASS_NAMED("ContactSubscription")
@interface UAPreferenceCenterConfigContactSubscription : NSObject <UAPreferenceCenterConfigItem>
/// The item’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
/// The item’s subscription ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull subscriptionID;
@property (nonatomic, readonly, strong) UAChannelScopes * _Nonnull scopes;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UAPreferenceConfigAlertDisplay;
@class UAPreferenceCenterConfigAlertButton;

/// Alert item info.
SWIFT_CLASS_NAMED("Alert")
@interface UAPreferenceCenterConfigAlert : NSObject <UAPreferenceCenterConfigItem>
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigAlertDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
/// The alert’s button.
@property (nonatomic, readonly, strong) UAPreferenceCenterConfigAlertButton * _Nullable button;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Alert button info.
SWIFT_CLASS_NAMED("Button")
@interface UAPreferenceCenterConfigAlertButton : NSObject
/// The buttton’s text.
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// The button’s content description.
@property (nonatomic, readonly, copy) NSString * _Nullable contentDescription;
/// Actions paylaod to run on tap
@property (nonatomic, readonly) id _Nullable actions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Alert display info
SWIFT_CLASS_NAMED("Display")
@interface UAPreferenceConfigAlertDisplay : NSObject
/// Title
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Subtitle
@property (nonatomic, readonly, copy) NSString * _Nullable subtitle;
/// Icon URL
@property (nonatomic, readonly, copy) NSString * _Nullable iconURL;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Condition types
typedef SWIFT_ENUM_NAMED(NSInteger, UAPreferenceCenterConfigConditionType, "PreferenceCenterConfigConditionType", open) {
/// Notification opt-in condition.
  UAPreferenceCenterConfigConditionTypeNotificationOptIn = 0,
};


/// Item types.
typedef SWIFT_ENUM_NAMED(NSInteger, UAPreferenceCenterConfigItemType, "PreferenceCenterConfigItemType", open) {
/// Channel subscription type.
  UAPreferenceCenterConfigItemTypeChannelSubscription = 0,
/// Contact subscription type.
  UAPreferenceCenterConfigItemTypeContactSubscription = 1,
/// Channel group subscription type.
  UAPreferenceCenterConfigItemTypeContactSubscriptionGroup = 2,
/// Alert type.
  UAPreferenceCenterConfigItemTypeAlert = 3,
};


/// Preference config section type.
typedef SWIFT_ENUM_NAMED(NSInteger, UAPreferenceCenterConfigSectionType, "PreferenceCenterConfigSectionType", open) {
/// Common section type.
  UAPreferenceCenterConfigSectionTypeCommon = 0,
/// Labeled section break type.
  UAPreferenceCenterConfigSectionTypeLabeledSectionBreak = 1,
};


/// Open delegate.
SWIFT_PROTOCOL_NAMED("PreferenceCenterOpenDelegate")
@protocol UAPreferenceCenterOpenDelegate
/// Opens the Preference Center with the given ID.
/// \param preferenceCenterID The preference center ID.
///
///
/// returns:
/// <code>true</code> if the preference center was opened, otherwise <code>false</code> to fallback to OOTB UI.
- (BOOL)openPreferenceCenter:(NSString * _Nonnull)preferenceCenterID SWIFT_WARN_UNUSED_RESULT;
@end


/// AirshipPreferenceCenter module loader.
/// @note For internal use only. :nodoc:
SWIFT_CLASS_NAMED("PreferenceCenterSDKModule")
@interface UAPreferenceCenterSDKModule : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;

/// View factories for Preference Center view controllers
SWIFT_CLASS_NAMED("PreferenceCenterViewControllerFactory")
@interface UAPreferenceCenterViewControllerFactory : NSObject
/// Makes a view controller for the given Preference Center ID.
/// \param preferenceCenterID The preferenceCenterID.
///
/// \param dismissAction Optional action to dismiss the view controller.
///
///
/// returns:
/// A view controller.
+ (UIViewController * _Nonnull)makeViewControllerWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID dismissAction:(void (^ _Nullable)(void))dismissAction SWIFT_WARN_UNUSED_RESULT;
/// Makes a view controller for the given Preference Center ID and theme.
/// \param preferenceCenterID The preferenceCenterID.
///
/// \param preferenceCenterThemePlist The theme plist.
///
///
/// returns:
/// A view controller.
+ (UIViewController * _Nullable)makeViewControllerWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID preferenceCenterThemePlist:(NSString * _Nonnull)preferenceCenterThemePlist error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef AIRSHIPPREFERENCECENTER_SWIFT_H
#define AIRSHIPPREFERENCECENTER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AirshipBasement;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AirshipPreferenceCenter",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol UAPreferenceCenterOpenDelegate;
@class NSString;
@class UAPreferenceCenterConfig;
@class NSData;
@class NSURL;

/// Airship PreferenceCenter module.
SWIFT_CLASS_NAMED("PreferenceCenter")
@interface UAPreferenceCenter : NSObject <UAComponent>
/// The shared PreferenceCenter instance. <code>Airship.takeOff</code> must be called before accessing this instance.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UAPreferenceCenter * _Nonnull shared;)
+ (UAPreferenceCenter * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Open delegate.
/// If set, the delegate will be called instead of launching the OOTB preference center screen.
@property (nonatomic, weak) id <UAPreferenceCenterOpenDelegate> _Nullable openDelegate;
- (BOOL)setThemeFromPlist:(NSString * _Nonnull)plist error:(NSError * _Nullable * _Nullable)error;
@property (nonatomic, getter=isComponentEnabled) BOOL componentEnabled;
/// Opens the Preference Center with the given ID.
/// \param preferenceCenterID The preference center ID.
///
- (void)openPreferenceCenter:(NSString * _Nonnull)preferenceCenterID;
/// Returns the configuration of the Preference Center with the given ID.
/// \param preferenceCenterID The preference center ID.
///
- (void)configWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID completionHandler:(void (^ _Nonnull)(UAPreferenceCenterConfig * _Nullable, NSError * _Nullable))completionHandler;
/// Returns the configuration of the Preference Center as JSON data with the given ID.
/// \param preferenceCenterID The preference center ID.
///
- (void)jsonConfigWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completionHandler;
- (BOOL)deepLink:(NSURL * _Nonnull)deepLink SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol UAPreferenceCenterConfigSection;
@class UAPreferenceConfigCommonDisplay;
@class UAPreferenceCenterConfigOptions;

/// Preference center config.
SWIFT_CLASS_NAMED("PreferenceCenterConfig")
@interface UAPreferenceCenterConfig : NSObject
/// The config’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceCenterConfigSection>> * _Nonnull sections;
/// The config’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
/// The config’s options.
@property (nonatomic, readonly, strong) UAPreferenceCenterConfigOptions * _Nullable options;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Config options.
SWIFT_CLASS_NAMED("Options")
@interface UAPreferenceCenterConfigOptions : NSObject
/// The config identifier.
@property (nonatomic, readonly) BOOL mergeChannelDataToContact;
- (nonnull instancetype)initWithMergeChannelDataToContact:(BOOL)mergeChannelDataToContact OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Common display info
SWIFT_CLASS_NAMED("CommonDisplay")
@interface UAPreferenceConfigCommonDisplay : NSObject
/// Title
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable subtitle;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UAPreferenceCenterConfigConditionType : NSInteger;

/// Condition
SWIFT_PROTOCOL_NAMED("PreferenceConfigCondition")
@protocol UAPreferenceConfigCondition
/// Condition type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigConditionType type;
@end

enum UANotificationOptInConditionStatus : NSInteger;

SWIFT_CLASS_NAMED("NotificationOptInCondition")
@interface UAPreferenceCenterConfigNotificationOptInCondition : NSObject <UAPreferenceConfigCondition>
@property (nonatomic, readonly) enum UAPreferenceCenterConfigConditionType type;
@property (nonatomic, readonly) enum UANotificationOptInConditionStatus optInStatus;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, UANotificationOptInConditionStatus, "OptInStatus", open) {
  UANotificationOptInConditionStatusOptedIn = 0,
  UANotificationOptInConditionStatusOptedOut = 1,
};

enum UAPreferenceCenterConfigSectionType : NSInteger;

/// Preference config section.
SWIFT_PROTOCOL_NAMED("PreferenceCenterConfigSection")
@protocol UAPreferenceCenterConfigSection
/// The section’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigSectionType type;
/// The section’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@end

@protocol UAPreferenceCenterConfigItem;

/// Common section.
SWIFT_CLASS_NAMED("CommonSection")
@interface UAPreferenceCenterConfigCommonSection : NSObject <UAPreferenceCenterConfigSection>
/// The section’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigSectionType type;
/// The section’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceCenterConfigItem>> * _Nonnull items;
/// The section’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Labeled section break info.
SWIFT_CLASS_NAMED("LabeledSectionBreak")
@interface UAPreferenceLabeledSectionBreak : NSObject <UAPreferenceCenterConfigSection>
/// The section’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigSectionType type;
/// The section’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The section’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UAPreferenceCenterConfigItemType : NSInteger;

/// Preference section item info.
SWIFT_PROTOCOL_NAMED("PreferenceCenterConfigItem")
@protocol UAPreferenceCenterConfigItem
/// The type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@end


/// Channel subscription item info.
SWIFT_CLASS_NAMED("ChannelSubscription")
@interface UAPreferenceCenterConfigChannelSubscription : NSObject <UAPreferenceCenterConfigItem>
/// The item’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s subscription ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull subscriptionID;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UAPreferenceContactSubscriptionGroupComponent;

/// Group contact subscription item info.
SWIFT_CLASS_NAMED("ContactSubscriptionGroup")
@interface UAPreferenceCenterConfigContactSubscriptionGroup : NSObject <UAPreferenceCenterConfigItem>
/// The item’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s subscription ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull subscriptionID;
/// Components
@property (nonatomic, readonly, copy) NSArray<UAPreferenceContactSubscriptionGroupComponent *> * _Nonnull components;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UAChannelScopes;

/// Contact subscription group component.
SWIFT_CLASS_NAMED("Component")
@interface UAPreferenceContactSubscriptionGroupComponent : NSObject
@property (nonatomic, readonly, strong) UAChannelScopes * _Nonnull scopes;
/// The component’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Contact subscription item info.
SWIFT_CLASS_NAMED("ContactSubscription")
@interface UAPreferenceCenterConfigContactSubscription : NSObject <UAPreferenceCenterConfigItem>
/// The item’s type.
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigCommonDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
/// The item’s subscription ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull subscriptionID;
@property (nonatomic, readonly, strong) UAChannelScopes * _Nonnull scopes;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UAPreferenceConfigAlertDisplay;
@class UAPreferenceCenterConfigAlertButton;

/// Alert item info.
SWIFT_CLASS_NAMED("Alert")
@interface UAPreferenceCenterConfigAlert : NSObject <UAPreferenceCenterConfigItem>
@property (nonatomic, readonly) enum UAPreferenceCenterConfigItemType type;
/// The item’s identifier.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// The item’s display info.
@property (nonatomic, readonly, strong) UAPreferenceConfigAlertDisplay * _Nullable display;
@property (nonatomic, readonly, copy) NSArray<id <UAPreferenceConfigCondition>> * _Nullable conditions;
/// The alert’s button.
@property (nonatomic, readonly, strong) UAPreferenceCenterConfigAlertButton * _Nullable button;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Alert button info.
SWIFT_CLASS_NAMED("Button")
@interface UAPreferenceCenterConfigAlertButton : NSObject
/// The buttton’s text.
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// The button’s content description.
@property (nonatomic, readonly, copy) NSString * _Nullable contentDescription;
/// Actions paylaod to run on tap
@property (nonatomic, readonly) id _Nullable actions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Alert display info
SWIFT_CLASS_NAMED("Display")
@interface UAPreferenceConfigAlertDisplay : NSObject
/// Title
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Subtitle
@property (nonatomic, readonly, copy) NSString * _Nullable subtitle;
/// Icon URL
@property (nonatomic, readonly, copy) NSString * _Nullable iconURL;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Condition types
typedef SWIFT_ENUM_NAMED(NSInteger, UAPreferenceCenterConfigConditionType, "PreferenceCenterConfigConditionType", open) {
/// Notification opt-in condition.
  UAPreferenceCenterConfigConditionTypeNotificationOptIn = 0,
};


/// Item types.
typedef SWIFT_ENUM_NAMED(NSInteger, UAPreferenceCenterConfigItemType, "PreferenceCenterConfigItemType", open) {
/// Channel subscription type.
  UAPreferenceCenterConfigItemTypeChannelSubscription = 0,
/// Contact subscription type.
  UAPreferenceCenterConfigItemTypeContactSubscription = 1,
/// Channel group subscription type.
  UAPreferenceCenterConfigItemTypeContactSubscriptionGroup = 2,
/// Alert type.
  UAPreferenceCenterConfigItemTypeAlert = 3,
};


/// Preference config section type.
typedef SWIFT_ENUM_NAMED(NSInteger, UAPreferenceCenterConfigSectionType, "PreferenceCenterConfigSectionType", open) {
/// Common section type.
  UAPreferenceCenterConfigSectionTypeCommon = 0,
/// Labeled section break type.
  UAPreferenceCenterConfigSectionTypeLabeledSectionBreak = 1,
};


/// Open delegate.
SWIFT_PROTOCOL_NAMED("PreferenceCenterOpenDelegate")
@protocol UAPreferenceCenterOpenDelegate
/// Opens the Preference Center with the given ID.
/// \param preferenceCenterID The preference center ID.
///
///
/// returns:
/// <code>true</code> if the preference center was opened, otherwise <code>false</code> to fallback to OOTB UI.
- (BOOL)openPreferenceCenter:(NSString * _Nonnull)preferenceCenterID SWIFT_WARN_UNUSED_RESULT;
@end


/// AirshipPreferenceCenter module loader.
/// @note For internal use only. :nodoc:
SWIFT_CLASS_NAMED("PreferenceCenterSDKModule")
@interface UAPreferenceCenterSDKModule : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;

/// View factories for Preference Center view controllers
SWIFT_CLASS_NAMED("PreferenceCenterViewControllerFactory")
@interface UAPreferenceCenterViewControllerFactory : NSObject
/// Makes a view controller for the given Preference Center ID.
/// \param preferenceCenterID The preferenceCenterID.
///
/// \param dismissAction Optional action to dismiss the view controller.
///
///
/// returns:
/// A view controller.
+ (UIViewController * _Nonnull)makeViewControllerWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID dismissAction:(void (^ _Nullable)(void))dismissAction SWIFT_WARN_UNUSED_RESULT;
/// Makes a view controller for the given Preference Center ID and theme.
/// \param preferenceCenterID The preferenceCenterID.
///
/// \param preferenceCenterThemePlist The theme plist.
///
///
/// returns:
/// A view controller.
+ (UIViewController * _Nullable)makeViewControllerWithPreferenceCenterID:(NSString * _Nonnull)preferenceCenterID preferenceCenterThemePlist:(NSString * _Nonnull)preferenceCenterThemePlist error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
